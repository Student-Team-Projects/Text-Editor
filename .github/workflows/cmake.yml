# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: MinSizeRel

jobs:
  build-linux-gcc:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: Linux (GCC 10)
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Dependencies
      run: |
        sudo tee --append /etc/apt/sources.list << EOF
          deb http://us.archive.ubuntu.com/ubuntu/ bionic universe
        EOF
        sudo apt -y update
        sudo apt -y install libncursesw5-dev g++-10 libgtest-dev ninja-build libvterm

    - name: Configure CMake
      shell: bash
      env:
        CC: gcc-10
        CXX: g++-10
      run: cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G Ninja

    - name: Build
      shell: bash
      run: cmake --build . -j$(nproc)

  build-macos-clang:
    name: MacOS (Clang)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Dependencies
      run: |
        brew install ninja

    - name: Configure CMake
      shell: bash
      run: cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G Ninja

    - name: Build
      shell: bash
      run: cmake --build . -j$(sysctl -n hw.logicalcpu)
